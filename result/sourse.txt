
public class Call {
Call(){
System.out.println("Call");
}
}
import java.util.ArrayList;
public class ClassInfo {
String className;
ArrayList<NewM> news = new ArrayList<NewM>();
ArrayList<ObjectT> objects = new ArrayList<ObjectT>();
ArrayList<Definition> definitions = new ArrayList<Definition>();
ArrayList<Call> calls = new ArrayList<Call>();
public ClassInfo() {
System.out.println("ClassInfo");
this.className = "";
}
}
public class ClassNode {
public ClassNode() {
System.out.println("ClassNode");
}
}
public class ClearSource {
public ClearSource() {
System.out.println("ClearSource");
readFolder();
}
private void readFolder() {
System.out.println("readFolder");
execute();
}
private void execute() {
System.out.println("execute");
}
}
public class Definition {
public Definition() {
System.out.println("Definition");
}
}
public class FourceDirected {
public FourceDirected() {
System.out.println("FourceDirected");
}
void blance(){
System.out.println("blance");
}
}
import java.util.ArrayList;
public class InportFile {
ArrayList<ClassNode> classNodes = new ArrayList<ClassNode>();
FourceDirected fourceDirected;
SpringCanvas springCanvas;
public InportFile() {
System.out.println("InportFile");
classNodes.add(new ClassNode());
fourceDirected = new FourceDirected();
springCanvas = new SpringCanvas();
}
void run(){
System.out.println("run");
fourceDirected.blance();
}
void print(){
System.out.println("print");
springCanvas.print();
}
}
public class main {
public static void main(String[] args) {
System.out.println("mainSTART");
new ClearSource();
System.out.println("main1");
SearchSource searchSource =  new SearchSource();
System.out.println("main2");
SpringFrame springFrame = new SpringFrame();
System.out.println("mainEND");
SpringFrame.marge(searchSource);
}
}
public class NewM {
public NewM() {
System.out.println("New");
}
}
public class ObjectT {
public ObjectT() {
System.out.println("Object");
}
}
import java.util.ArrayList;
public class SearchSource {
ArrayList<ClassInfo> classInfos = new ArrayList<ClassInfo>();
public SearchSource() {
System.out.println("SearchSource");
SearchClass();
SearchNew();
SearchMethod();
SearchObject();
}
private void SearchClass() {
System.out.println("SearchClass");
classInfos.add(new ClassInfo());
}
private void SearchNew() {
System.out.println("SearchNew");
classInfos.get(0).news.add(new NewM());
}
private void SearchMethod() {
System.out.println("SearchMethod");
classInfos.get(0).calls.add(new Call());
classInfos.get(0).definitions.add(new Definition());
}
private void SearchObject() {
System.out.println("SearchObject");
classInfos.get(0).objects.add(new ObjectT());
}
}
public class SpringCanvas {
public SpringCanvas() {
System.out.println("SpringCanvas");
}
void print(){
System.out.println("print");
}
;
}
import java.util.ArrayList;
public class SpringFrame {
static ArrayList<ClassInfo> classInfo;
public SpringFrame() {
System.out.println("SpringFrame");
InportFile inportFile = new InportFile();
inportFile.run();
inportFile.print();
}
public static void marge(SearchSource searchSource) {
System.out.println("marge");
classInfo = searchSource.classInfos;
}
}
